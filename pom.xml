<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.codeteam</groupId>
    <artifactId>ct-website</artifactId>
    <version>1.0-SNAPSHOT</version>
         <!--1.parent标签-->
        <!--集中定义版本号-->
        <parent>
             <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-parent</artifactId>
           <version>2.5.1</version>
             <relativePath/> <!-- lookup parent from repository -->
         </parent>

        <!-- 引入依赖版本号定义-->
        <properties>
            <mysql.driver.version>5.1.48</mysql.driver.version>
            <mybatis.plus.version>3.4.3</mybatis.plus.version>
            <druid.version>1.1.21</druid.version>
            <commons.lang3.version>3.9</commons.lang3.version>
            <google.guava.version>30.1.1-jre</google.guava.version>
        </properties>

        <!--2.添加依赖项-->
        <!--依赖: 项目中需要添加什么功能,则依赖什么jar包.-->
         <dependencies>
            <!--引入SpringMVC功能-->
             <dependency>
                 <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
            </dependency>
             <!--SpringBoot的测试功能-->
             <dependency>
                <groupId>org.springframework.boot</groupId>
                 <artifactId>spring-boot-starter-test</artifactId>
                 <scope>test</scope>
            </dependency>

            <!--SpringBoot核心机制: "开箱即用"
                 只需导入特定的jar包文件 则可以直接使用其中的功能
                 根本原因: SpringBoot是对框架的简化,内部进行了扩展,无需程序员操作.
             -->
             <!--支持热部署 -->
             <dependency>
                 <groupId>org.springframework.boot</groupId>
                 <artifactId>spring-boot-devtools</artifactId>
             </dependency>

             <!--引入插件lombok 自动的set/get/构造方法插件  -->
             <dependency>
                 <groupId>org.projectlombok</groupId>
                 <artifactId>lombok</artifactId>
             </dependency>

             <!--引入数据库驱动 -->
             <dependency>
                <groupId>mysql</groupId>
                 <artifactId>mysql-connector-java</artifactId>
                 <version>${mysql.driver.version}</version>
                 <scope>runtime</scope>
             </dependency>

             <!--springBoot数据库连接  -->
             <dependency>
                 <groupId>org.springframework.boot</groupId>
                 <artifactId>spring-boot-starter-jdbc</artifactId>
             </dependency>

             <!--spring整合mybatis-plus MP中包含了mybatis的包所以将原来的包删除 -->
             <dependency>
                 <groupId>com.baomidou</groupId>
                 <artifactId>mybatis-plus-boot-starter</artifactId>
                 <version>${mybatis.plus.version}</version>
             </dependency>

             <!-- 引入druid连接池-->
             <dependency>
                 <groupId>com.alibaba</groupId>
                 <artifactId>druid</artifactId>
                 <version>${druid.version}</version>
             </dependency>

             <!-- 引入commons-lang3依赖-->
             <dependency>
                 <groupId>org.apache.commons</groupId>
                 <artifactId>commons-lang3</artifactId>
                 <version>${commons.lang3.version}</version>
             </dependency>

             <!-- 引入google guava-->
             <dependency>
                 <groupId>com.google.guava</groupId>
                 <artifactId>guava</artifactId>
                 <version>${google.guava.version}</version>
             </dependency>

             <!-- 引入thymeleaf模板引擎-->
             <dependency>
                 <groupId>org.springframework.boot</groupId>
                 <artifactId>spring-boot-starter-thymeleaf</artifactId>
             </dependency>

             <!-- 引入aspsectj-->
             <dependency>
                 <groupId>org.aspectj</groupId>
                 <artifactId>aspectjweaver</artifactId>
             </dependency>
             <dependency>
                 <groupId>org.springframework.boot</groupId>
                 <artifactId>spring-boot-starter-aop</artifactId>
                 <scope>test</scope>
             </dependency>
         </dependencies>

         <!--3.添加build标签-->
         <!--该插件是SpringBoot项目打包时必须添加的.
            如果没有该插件 则导致jar包不能运行
         -->
         <build>
             <plugins>
                <plugin>
                     <groupId>org.springframework.boot</groupId>
                     <artifactId>spring-boot-maven-plugin</artifactId>
                     <version>2.5.1</version>
                </plugin>
             </plugins>
         </build>
</project>